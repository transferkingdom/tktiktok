/**
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../../models';
import { Product202502SearchProductsResponseDataProductsAudit } from './SearchProductsResponseDataProductsAudit';
import { Product202502SearchProductsResponseDataProductsIntegratedPlatformStatuses } from './SearchProductsResponseDataProductsIntegratedPlatformStatuses';
import { Product202502SearchProductsResponseDataProductsProductFamilies } from './SearchProductsResponseDataProductsProductFamilies';
import { Product202502SearchProductsResponseDataProductsRecommendedCategories } from './SearchProductsResponseDataProductsRecommendedCategories';
import { Product202502SearchProductsResponseDataProductsSkus } from './SearchProductsResponseDataProductsSkus';

export class Product202502SearchProductsResponseDataProducts {
    'audit'?: Product202502SearchProductsResponseDataProductsAudit;
    /**
    * The time when the product is created. Unix timestamp.
    */
    'createTime'?: number;
    /**
    * The product ID generated by TikTok Shop.
    */
    'id'?: string;
    /**
    * The current status of the product on platforms that are natively integrated with TikTok Shop (e.g. TOKOPEDIA).  **Note**: For Indonesia sellers, if you did not set the listing platform as `TOKOPEDIA` when creating or editing a product, this will be omitted.
    */
    'integratedPlatformStatuses'?: Array<Product202502SearchProductsResponseDataProductsIntegratedPlatformStatuses>;
    /**
    * A flag indicating whether the product is not for sale. True: Not for sale. False: For sale.
    */
    'isNotForSale'?: boolean;
    /**
    * The current quality tier of this product listing. The quality tier of a product listing depends on the quality of the content in its product fields such as the title, image, attributes etc.  Possible values: - POOR - FAIR - GOOD  **Note**: Available only for the US market.
    */
    'listingQualityTier'?: string;
    /**
    * The **live** product family that this product belongs to. A product family is a virtual group of products that share common characteristics (such as flavor, version, or size), allowing them to appear as selectable variations on the product page. **Note**:  - Applicable only for US local sellers. - Omitted if this product does not belong to any product family.
    */
    'productFamilies'?: Array<Product202502SearchProductsResponseDataProductsProductFamilies>;
    /**
    * The reasons why synchronizing of global product information to local products failed.  Only applicable for cross-border sellers.
    */
    'productSyncFailReasons'?: Array<string>;
    /**
    * Recommended categories for the product based on the product title, description, and images.
    */
    'recommendedCategories'?: Array<Product202502SearchProductsResponseDataProductsRecommendedCategories>;
    /**
    * The regions where the product is sold. Possible values: - BR: Brazil - DE: Germany - ES: Spain - FR: France - GB: United Kingdom - ID: Indonesia - IE: Ireland - IT: Italy - JP: Japan - MX: Mexico - MY: Malaysia - PH: Philippines - SG: Singapore - TH: Thailand - US: United States - VN: Vietnam
    */
    'salesRegions'?: Array<string>;
    /**
    * A list of Stock Keeping Units (SKUs) used to identify distinct variants of the product.
    */
    'skus'?: Array<Product202502SearchProductsResponseDataProductsSkus>;
    /**
    * The product status in TikTok Shop. Possible values:  - DRAFT - PENDING - FAILED - ACTIVATE - SELLER_DEACTIVATED - PLATFORM_DEACTIVATED - FREEZE - DELETED  **Note**: For Indonesia sellers, if you did not set the listing platform as `TIKTOK_SHOP` when creating or editing a product, this will be omitted.
    */
    'status'?: string;
    /**
    * The product title.
    */
    'title'?: string;
    /**
    * The time when the product is last updated. Unix timestamp.
    */
    'updateTime'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "audit",
            "baseName": "audit",
            "type": "Product202502SearchProductsResponseDataProductsAudit"
        },
        {
            "name": "createTime",
            "baseName": "create_time",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "integratedPlatformStatuses",
            "baseName": "integrated_platform_statuses",
            "type": "Array<Product202502SearchProductsResponseDataProductsIntegratedPlatformStatuses>"
        },
        {
            "name": "isNotForSale",
            "baseName": "is_not_for_sale",
            "type": "boolean"
        },
        {
            "name": "listingQualityTier",
            "baseName": "listing_quality_tier",
            "type": "string"
        },
        {
            "name": "productFamilies",
            "baseName": "product_families",
            "type": "Array<Product202502SearchProductsResponseDataProductsProductFamilies>"
        },
        {
            "name": "productSyncFailReasons",
            "baseName": "product_sync_fail_reasons",
            "type": "Array<string>"
        },
        {
            "name": "recommendedCategories",
            "baseName": "recommended_categories",
            "type": "Array<Product202502SearchProductsResponseDataProductsRecommendedCategories>"
        },
        {
            "name": "salesRegions",
            "baseName": "sales_regions",
            "type": "Array<string>"
        },
        {
            "name": "skus",
            "baseName": "skus",
            "type": "Array<Product202502SearchProductsResponseDataProductsSkus>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string"
        },
        {
            "name": "updateTime",
            "baseName": "update_time",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Product202502SearchProductsResponseDataProducts.attributeTypeMap;
    }
}

