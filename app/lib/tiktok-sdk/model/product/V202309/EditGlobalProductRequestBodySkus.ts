/**
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../../models';
import { Product202309EditGlobalProductRequestBodySkusIdentifierCode } from './EditGlobalProductRequestBodySkusIdentifierCode';
import { Product202309EditGlobalProductRequestBodySkusInventory } from './EditGlobalProductRequestBodySkusInventory';
import { Product202309EditGlobalProductRequestBodySkusPrice } from './EditGlobalProductRequestBodySkusPrice';
import { Product202309EditGlobalProductRequestBodySkusSalePrices } from './EditGlobalProductRequestBodySkusSalePrices';
import { Product202309EditGlobalProductRequestBodySkusSalesAttributes } from './EditGlobalProductRequestBodySkusSalesAttributes';

export class Product202309EditGlobalProductRequestBodySkus {
    /**
    * An external identifier used in an external ecommerce platform. This is used to associate the global SKU between TikTok Shop and the external ecommerce platform.  Max length: 999 characters
    */
    'externalGlobalSkuId'?: string;
    /**
    * If the SKU is a combined listing (in other words, a product bundle) containing multiple individual SKUs, you can add up to 10 additional identifier codes here for the SKUs included in the bundle. Delimit the codes with commas.  **Format**: GTIN: 14 digits  EAN: 8, 13, or 14 digits  UPC: 12 digits  ISBN: 13 digits (supports \'X\' in uppercase as the last digit)  **Note**:  - Applicable only for the EU market.  - The identifier code must be unique for each SKU, with no repetition allowed.
    */
    'extraIdentifierCodes'?: Array<string>;
    /**
    * The total SKU inventory quantity across all shops globally.   The inventory for each local shop is automatically calculated when a product is first published. After publishing, this global quantity cannot be manually changed. You can only modify the inventory quantity in each local shop.
    */
    'globalQuantity'?: number;
    /**
    * The global SKU ID in TikTok Shop. One product can contain multiple SKU IDs.  **Note**:  - To edit an existing SKU, include its SKU ID. - Any existing SKU IDs not listed here will result in the deletion of those SKUs. For example, if this product contains 5 SKUs and you only provide 2 SKU IDs, the remaining 3 will be deleted. - To create new SKUs, leave the SKU ID blank and complete the other fields. 
    */
    'id'?: string;
    'identifierCode'?: Product202309EditGlobalProductRequestBodySkusIdentifierCode;
    /**
    * SKU inventory information per warehouse. If multi-warehouse is enabled in Seller Center, you must provide the inventory details for each warehouse.  Max count: 50  **Note**: `global_quantity` will not take effect if inventory details are provided for each warehouse.
    */
    'inventory'?: Array<Product202309EditGlobalProductRequestBodySkusInventory>;
    'price'?: Product202309EditGlobalProductRequestBodySkusPrice;
    /**
    * The SKU\'s **local display price** shown on the product page before any discounts.   **Note**:  -  Required for JP and US shops using China warehouses, optional for others. - This is the definitive final price shown on the product page, all other prices will be ignored.
    */
    'salePrices'?: Array<Product202309EditGlobalProductRequestBodySkusSalePrices>;
    /**
    * A list of attributes  (e.g. size, color, length) that define each variant of a product.  **Note**:  - If your product is straightforward without any sales attributes, you can omit this object. - You can only have up to 3 types of sales attributes per product. - Each SKU must include the same number and type of sales attributes. For example, you cannot have one SKU that has only a Color attribute, while another SKU has both Color and Size attributes. - Provide either a built-in ID or a custom name; if both are provided, the ID takes priority. - The `id/name` and `value_id/value_name` pairs must be unique in each SKU. For example, you cannot repeat `\"name\": \"Color\"`, `\"value_name\": \"Red\"` in different SKUs.
    */
    'salesAttributes'?: Array<Product202309EditGlobalProductRequestBodySkusSalesAttributes>;
    /**
    * An internal code/name for managing SKUs, not visible to buyers.   - Valid length: 1-50 characters - Format: Text without spaces
    */
    'sellerSku'?: string;
    /**
    * The total quantity/volume of the product represented by the SKU. For example, if the SKU represents 500ml of water, this value would be 500 if the unit type is defined as ml. Valid range: [0.01, 99,999.9999]  Applicable only for the EU market.  **Note**:  - This is mainly used to calculate the unit price of the SKU, and is required only if you wish to display the unit price to facilitate easier price comparisons across different products and packaging sizes. - Unit price = Selling price/(SKU unit count/base unit count). Therefore if you want to obtain the unit price, you would also need to define the \"base unit count\" and the \"unit type\" product attributes. Retrieve the relevant information for these product attributes by using the [Get Global Attributes API](https://partner.tiktokshop.com/docv2/page/650a0483c16ffe02b8dfc80a). The unit price would then be returned in the [Get Global Product API](https://partner.tiktokshop.com/docv2/page/6509e2b0bace3e02b7490c96).
    */
    'skuUnitCount'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "externalGlobalSkuId",
            "baseName": "external_global_sku_id",
            "type": "string"
        },
        {
            "name": "extraIdentifierCodes",
            "baseName": "extra_identifier_codes",
            "type": "Array<string>"
        },
        {
            "name": "globalQuantity",
            "baseName": "global_quantity",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "identifierCode",
            "baseName": "identifier_code",
            "type": "Product202309EditGlobalProductRequestBodySkusIdentifierCode"
        },
        {
            "name": "inventory",
            "baseName": "inventory",
            "type": "Array<Product202309EditGlobalProductRequestBodySkusInventory>"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "Product202309EditGlobalProductRequestBodySkusPrice"
        },
        {
            "name": "salePrices",
            "baseName": "sale_prices",
            "type": "Array<Product202309EditGlobalProductRequestBodySkusSalePrices>"
        },
        {
            "name": "salesAttributes",
            "baseName": "sales_attributes",
            "type": "Array<Product202309EditGlobalProductRequestBodySkusSalesAttributes>"
        },
        {
            "name": "sellerSku",
            "baseName": "seller_sku",
            "type": "string"
        },
        {
            "name": "skuUnitCount",
            "baseName": "sku_unit_count",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Product202309EditGlobalProductRequestBodySkus.attributeTypeMap;
    }
}

