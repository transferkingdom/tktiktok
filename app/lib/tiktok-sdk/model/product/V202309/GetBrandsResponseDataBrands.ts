/**
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../../models';

export class Product202309GetBrandsResponseDataBrands {
    /**
    * A status to indicate whether the seller has obtained prior authorization to sell goods bearing the brand\'s trademark, name, or logo.  Possible values: - UNAUTHORIEZD - AUTHORIZED  **Note**: If the brand is unauthorized, check `is_t1_brand` to determine if you can use it during product creation.
    */
    'authorizedStatus'?: string;
    /**
    * The availability of an **authorized brand** in the requested category. Possible values: - AVAILABLE - UNAVAILABLE  **Note**: Not applicable if you did not specify the category ID, or the brand is unauthorized.
    */
    'brandStatus'?: string;
    /**
    * The brand ID.
    */
    'id'?: string;
    /**
    * A flag to indicate whether the brand is a T1 brand, which refers to internationally renowned brands that may have compliance risks and require sellers to obtain brand authorization.  **Note**: - You cannot create products with unauthorized T1 brands. - You can create products with unauthorized non-T1 brands, **but** the brand information will not appear on the product display page.  You can obtain authorization by submitting the required qualifications through TikTok Shop Seller Center > Qualification Center > Brand qualification.
    */
    'isT1Brand'?: boolean;
    /**
    * The brand name.
    */
    'name'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "authorizedStatus",
            "baseName": "authorized_status",
            "type": "string"
        },
        {
            "name": "brandStatus",
            "baseName": "brand_status",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "isT1Brand",
            "baseName": "is_t1_brand",
            "type": "boolean"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return Product202309GetBrandsResponseDataBrands.attributeTypeMap;
    }
}

