/**
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../../models';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersDiscountAmount } from './SearchReturnsResponseDataReturnOrdersDiscountAmount';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersPartialRefund } from './SearchReturnsResponseDataReturnOrdersPartialRefund';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersRefundAmount } from './SearchReturnsResponseDataReturnOrdersRefundAmount';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersReturnLineItems } from './SearchReturnsResponseDataReturnOrdersReturnLineItems';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersReturnWarehouseAddress } from './SearchReturnsResponseDataReturnOrdersReturnWarehouseAddress';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersSellerNextActionResponse } from './SearchReturnsResponseDataReturnOrdersSellerNextActionResponse';
import { ReturnRefund202309SearchReturnsResponseDataReturnOrdersShippingFeeAmount } from './SearchReturnsResponseDataReturnOrdersShippingFeeAmount';

export class ReturnRefund202309SearchReturnsResponseDataReturnOrders {
    /**
    * List of arbitration statuses.  Available values: - `IN_PROGRESS`: The TikTok Shop platform operator is processing arbitration. Platform may request additional information from the seller.   - `SUPPORT_BUYER`: The platform operator supports buyer. - `SUPPORT_SELLER`: The platform operator supports seller. - `CLOSED`: Arbitration is closed
    */
    'arbitrationStatus'?: string;
    /**
    * Only return this field when seller initiated the partial refund. Available values: - `TRUE`: Buyer reject the seller partial refund offer. - `FALSE`: Buyer accept the seller partial refund offer or awaiting buyer response.
    */
    'buyerRejectedPartialRefund'?: boolean;
    /**
    * Whether buyer can keep the item(s) in a return or replacement process.
    */
    'canBuyerKeepItem'?: boolean;
    /**
    * If `is_combined_return` is `true`, this field will return the `combined_return_id` associated with the combined return.
    */
    'combinedReturnId'?: string;
    /**
    * Return create time. Unix timestamp.
    */
    'createTime'?: number;
    /**
    * Discount refund details.
    */
    'discountAmount'?: Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersDiscountAmount>;
    /**
    * The handover method buyer chooses to use when returning item(s) to seller using platform\'s shipping service.  - `DROP_OFF`: buyer will drop off the item(s) at courier  - `PICKUP`: buyer is scheduling a pick up service offered by the courier.
    */
    'handoverMethod'?: string;
    /**
    * This field will return true if the buyer is asking to combine multiple returns into one return package.
    */
    'isCombinedReturn'?: boolean;
    /**
    * The next return ID the current return order is edited to.
    */
    'nextReturnId'?: string;
    /**
    * TikTok Shop order ID. Contains multiple order line item IDs.
    */
    'orderId'?: string;
    'partialRefund'?: ReturnRefund202309SearchReturnsResponseDataReturnOrdersPartialRefund;
    /**
    * The previous return ID the current return order is edited from.
    */
    'preReturnId'?: string;
    'refundAmount'?: ReturnRefund202309SearchReturnsResponseDataReturnOrdersRefundAmount;
    /**
    * The identifier of a specific return.
    */
    'returnId'?: string;
    /**
    * Return order lines items.
    */
    'returnLineItems'?: Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersReturnLineItems>;
    /**
    * Return method: - `SELLER_SHIPPED`: Seller offers the return shipping service. - `BUYER_SHIPPED`: Buyer offers the return shipping service. - `PLATFORM_SHIPPED`: TikTok Shop offers the return shipping service.
    */
    'returnMethod'?: string;
    /**
    * The provider ID of parcel when buyer returns the items.
    */
    'returnProviderId'?: string;
    /**
    * The provider name of parcel when buyer returns the item(s).
    */
    'returnProviderName'?: string;
    /**
    * Reason for return.
    */
    'returnReason'?: string;
    /**
    * Reason for return, in localized text. You can change language using the locale request parameter. 
    */
    'returnReasonText'?: string;
    /**
    * The type of return shipping document selected by the buyer.  Available values: - `SHIPPING_LABE`L - `QR_CODE`
    */
    'returnShippingDocumentType'?: string;
    /**
    * Return status. Available values: - `RETURN_OR_REFUND_REQUEST_PENDING`: Buyer has initiated a return or refund request. The request is pending review by seller or platform.  - `REFUND_OR_RETURN_REQUEST_REJECT`: The return or refund request was rejected.  - `AWAITING_BUYER_SHIP`: The return request was approved. The seller is waiting for the buyer to ship the approved items to the seller. If the buyer doesn\'t ship the items to the seller before the deadline, the platform will close the request. - `BUYER_SHIPPED_ITEM`: Buyer has shipped the approved items to seller. - `REJECT_RECEIVE_PACKAGE`: Seller inspected the returned items and rejected the return package.  - `RETURN_OR_REFUND_REQUEST_SUCCESS`: The return/refund request was approved. The buyer will be refunded. - `RETURN_OR_REFUND_REQUEST_CANCEL`: The request has been cancelled by the buyer or system.  - `RETURN_OR_REFUND_REQUEST_COMPLETE`: The return/refund was processed successfully. The buyer has been refunded. - `REPLACEMENT_REQUEST_PENDING`: Buyer has initiated a replacement request. The request is pending review by seller. - `REPLACEMENT_REQUEST_REJECT`: Seller reject the buyer replacement request. - `REPLACEMENT_REQUEST_REFUND_SUCCESS`: Buyer\'s replacement request was resolved by refund due to insufficient inventory. - `REPLACEMENT_REQUEST_CANCEL`: Buyer canceled the replacement request. - `REPLACEMENT_REQUEST_COMPLETE`: Seller has approved the buyer\'s replacement request, platform will generate a new order for seller to fulfill. - `AWAITING_BUYER_RESPONSE`: Seller offer another return type to the buyer, and waiting buyer response. Seller proposed return type can check the `seller_proposed_return_type`. 
    */
    'returnStatus'?: string;
    /**
    * The tracking number of parcels when buyer returns the item(s).
    */
    'returnTrackingNumber'?: string;
    /**
    * Return type. Available values: - `REFUND`: Seller will issue a refund without return. The buyer is not required to send the item(s) back to the seller. - `RETURN_AND_REFUND`: Buyer is required to send the item(s) back to the seller. The seller will need to review the condition of the returned item(s) before a refund can be issued to the buyer.  - `REPLACEMENT`: The buyer requires the seller to replace the item(s).
    */
    'returnType'?: string;
    'returnWarehouseAddress'?: ReturnRefund202309SearchReturnsResponseDataReturnOrdersReturnWarehouseAddress;
    /**
    * Return initiation role. Available values: - `BUYER` - `SELLER` - `OPERATOR` : TikTok Shop platform operator. - `SYSTEM`:  TikTok Shop system. Please see \"API overview\" to learn more about roles. 
    */
    'role'?: string;
    /**
    * Seller\'s next action and deadline.
    */
    'sellerNextActionResponse'?: Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersSellerNextActionResponse>;
    /**
    * Seller proposed return type: - `PARTIAL_REFUND`
    */
    'sellerProposedReturnType'?: string;
    /**
    * The shipment method the buyer selected to send the item(s) back to seller Available values: - `PLATFORM`: Buyer will use TikTok Shop\'s shipping service to send the items back to seller. Use the `handover_method` field to see which handover method the buyer is using, `drop_off` or `pickup`.  - `BUYER_ARRANGE`: Buyer will arrange shipment to send the item(s) back to seller. 
    */
    'shipmentType'?: string;
    /**
    * The return shipping fee details.
    */
    'shippingFeeAmount'?: Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersShippingFeeAmount>;
    /**
    * Return update time. Unix timestamp.
    */
    'updateTime'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "arbitrationStatus",
            "baseName": "arbitration_status",
            "type": "string"
        },
        {
            "name": "buyerRejectedPartialRefund",
            "baseName": "buyer_rejected_partial_refund",
            "type": "boolean"
        },
        {
            "name": "canBuyerKeepItem",
            "baseName": "can_buyer_keep_item",
            "type": "boolean"
        },
        {
            "name": "combinedReturnId",
            "baseName": "combined_return_id",
            "type": "string"
        },
        {
            "name": "createTime",
            "baseName": "create_time",
            "type": "number"
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersDiscountAmount>"
        },
        {
            "name": "handoverMethod",
            "baseName": "handover_method",
            "type": "string"
        },
        {
            "name": "isCombinedReturn",
            "baseName": "is_combined_return",
            "type": "boolean"
        },
        {
            "name": "nextReturnId",
            "baseName": "next_return_id",
            "type": "string"
        },
        {
            "name": "orderId",
            "baseName": "order_id",
            "type": "string"
        },
        {
            "name": "partialRefund",
            "baseName": "partial_refund",
            "type": "ReturnRefund202309SearchReturnsResponseDataReturnOrdersPartialRefund"
        },
        {
            "name": "preReturnId",
            "baseName": "pre_return_id",
            "type": "string"
        },
        {
            "name": "refundAmount",
            "baseName": "refund_amount",
            "type": "ReturnRefund202309SearchReturnsResponseDataReturnOrdersRefundAmount"
        },
        {
            "name": "returnId",
            "baseName": "return_id",
            "type": "string"
        },
        {
            "name": "returnLineItems",
            "baseName": "return_line_items",
            "type": "Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersReturnLineItems>"
        },
        {
            "name": "returnMethod",
            "baseName": "return_method",
            "type": "string"
        },
        {
            "name": "returnProviderId",
            "baseName": "return_provider_id",
            "type": "string"
        },
        {
            "name": "returnProviderName",
            "baseName": "return_provider_name",
            "type": "string"
        },
        {
            "name": "returnReason",
            "baseName": "return_reason",
            "type": "string"
        },
        {
            "name": "returnReasonText",
            "baseName": "return_reason_text",
            "type": "string"
        },
        {
            "name": "returnShippingDocumentType",
            "baseName": "return_shipping_document_type",
            "type": "string"
        },
        {
            "name": "returnStatus",
            "baseName": "return_status",
            "type": "string"
        },
        {
            "name": "returnTrackingNumber",
            "baseName": "return_tracking_number",
            "type": "string"
        },
        {
            "name": "returnType",
            "baseName": "return_type",
            "type": "string"
        },
        {
            "name": "returnWarehouseAddress",
            "baseName": "return_warehouse_address",
            "type": "ReturnRefund202309SearchReturnsResponseDataReturnOrdersReturnWarehouseAddress"
        },
        {
            "name": "role",
            "baseName": "role",
            "type": "string"
        },
        {
            "name": "sellerNextActionResponse",
            "baseName": "seller_next_action_response",
            "type": "Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersSellerNextActionResponse>"
        },
        {
            "name": "sellerProposedReturnType",
            "baseName": "seller_proposed_return_type",
            "type": "string"
        },
        {
            "name": "shipmentType",
            "baseName": "shipment_type",
            "type": "string"
        },
        {
            "name": "shippingFeeAmount",
            "baseName": "shipping_fee_amount",
            "type": "Array<ReturnRefund202309SearchReturnsResponseDataReturnOrdersShippingFeeAmount>"
        },
        {
            "name": "updateTime",
            "baseName": "update_time",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ReturnRefund202309SearchReturnsResponseDataReturnOrders.attributeTypeMap;
    }
}

