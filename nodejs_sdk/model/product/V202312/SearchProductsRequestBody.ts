/**
 * tiktok shop openapi
 * sdk for apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from '../../models';

export class Product202312SearchProductsRequestBody {
    /**
    * Filter products by their audit status for TikTok Shop. Possible values:  - AUDITING: The product is currently being audited. - FAILED: The product failed the audit, or the audit was cancelled. - APPROVED: The product passed the audit and has been listed on the platform.
    */
    'auditStatus'?: Array<string>;
    /**
    * Filter products by the category tree version. Possible values based on region: - US: `v2`, represents the 7-level category tree. - Other regions: `v1`, represents the 3-level category tree. Default: Return all products from both `v1` and `v2` category trees.
    */
    'categoryVersion'?: string;
    /**
    * Filter products to show only those that are created on or after the specified date and time. Unix timestamp.  **Note**: `create_time_ge` and `create_time_le` together constitute the creation time filter condition. - If `create_time_ge` is filled but `create_time_le` is empty, `create_time_le` will default to the current time. - If `create_time_le` is filled but `create_time_ge` is empty, `create_time_ge` will default to the earliest shop time.
    */
    'createTimeGe'?: number;
    /**
    * Filter products to show only those that are created on or before the specified date and time. Unix timestamp. Refer to notes in `create_time_ge` for more usage information.
    */
    'createTimeLe'?: number;
    /**
    * Filter products by the listing platforms. Possible values: - TOKOPEDIA - TIKTOK_SHOP Default: Return all products regardless of their listing platform.  Applicable only for sellers that migrated from Tokopedia. **Note**: - You must also specify a `status` value other than `ALL` when filtering by listing platforms. Returning all statuses is not supported. - If you pass in one platform, the search will return products that are listed on that platform, including those that are listed on both platforms. - If you pass in `[\"TIKTOK_SHOP\", \"TOKOPEDIA\"]`, only products listed on both platforms will be returned, not those listed on just one.
    */
    'listingPlatforms'?: Array<string>;
    /**
    * Filter products by their listing quality tier. Possible values: - POOR - FAIR - GOOD  **Note**: Available only for the US market.
    */
    'listingQualityTier'?: string;
    /**
    * Filter products by these seller SKU codes.
    */
    'sellerSkus'?: Array<string>;
    /**
    * Filter products by SKU IDs. Max count: 10
    */
    'skuIds'?: Array<string>;
    /**
    * Filter products by their status. Default: ALL Possible values:  - ALL - DRAFT - PENDING - FAILED - ACTIVATE - SELLER_DEACTIVATED - PLATFORM_DEACTIVATED - FREEZE - DELETED 
    */
    'status'?: string;
    /**
    * Filter products to show only those that are updated on or after the specified date and time. Unix timestamp.  **Note**: `update_time_ge` and `update_time_le` together define the update time filter condition. - If `update_time_ge` is filled but `update_time_le` is empty, `update_time_le` will default to the current time. - If `update_time_le` is filled but `update_time_ge` is empty, `update_time_ge` will default to the earliest shop time.
    */
    'updateTimeGe'?: number;
    /**
    * Filter products to show only those that are updated on or before the specified date and time. Unix timestamp. Refer to notes in `update_time_ge` for more usage information.
    */
    'updateTimeLe'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "auditStatus",
            "baseName": "audit_status",
            "type": "Array<string>"
        },
        {
            "name": "categoryVersion",
            "baseName": "category_version",
            "type": "string"
        },
        {
            "name": "createTimeGe",
            "baseName": "create_time_ge",
            "type": "number"
        },
        {
            "name": "createTimeLe",
            "baseName": "create_time_le",
            "type": "number"
        },
        {
            "name": "listingPlatforms",
            "baseName": "listing_platforms",
            "type": "Array<string>"
        },
        {
            "name": "listingQualityTier",
            "baseName": "listing_quality_tier",
            "type": "string"
        },
        {
            "name": "sellerSkus",
            "baseName": "seller_skus",
            "type": "Array<string>"
        },
        {
            "name": "skuIds",
            "baseName": "sku_ids",
            "type": "Array<string>"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string"
        },
        {
            "name": "updateTimeGe",
            "baseName": "update_time_ge",
            "type": "number"
        },
        {
            "name": "updateTimeLe",
            "baseName": "update_time_le",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Product202312SearchProductsRequestBody.attributeTypeMap;
    }
}

